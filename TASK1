// Design code

module BasicDigitalLogic (
    input wire A,        
    input wire B,       
    input wire C,        
    output wire AND_out,
    output wire OR_out,  
    output wire XOR_out, 
    output wire NOT_out,
    output wire NOR_out,
    output wire NAND_out,
    output wire Sum_out, 
    output wire Carry_out, 
    output wire MUX_out   
    );

    // Logic Gates
    assign AND_out = A & B;
    assign OR_out = A | B;
    assign XOR_out = A ^ B;
    assign NOT_out = ~A;
    assign NOR_out = ~(A | B);
    assign NAND_out = ~( A ^ B);
    

    // 1-bit full adder
    assign Sum_out = A ^ B ^ C;
    assign Carry_out = (A & B) | (C & (A ^ B));

    // 2:1 Multiplexer
    assign MUX_out = C ? B : A;

endmodule

// Testbench code

module BasicDigitalLogic_tb;
    reg A, B, C;
    wire AND_out, OR_out, XOR_out, NOT_out, NOR_out, NAND_out, Sum_out, Carry_out, MUX_out;

    // Instantiate the module to be tested
    BasicDigitalLogic uut (
        .A(A),
        .B(B),
        .C(C),
        .AND_out(AND_out),
        .OR_out(OR_out),
        .XOR_out(XOR_out),
        .NOT_out(NOT_out),
        .NOR_out(NOR_out),
        .NAND_out(NAND_out),  
        .Sum_out(Sum_out),
        .Carry_out(Carry_out),
        .MUX_out(MUX_out)
    );

    // Stimulus generation
    initial begin
       $dumpfile("dump.vcd");
      $dumpvars(0, BasicDigitalLogic_tb);
        // Test case 1
        A = 1; B = 0; C = 0;
        #10;
        
        // Test case 2
        A = 0; B = 1; C = 0;
        #10;
        
        // Test case 3
        A = 1; B = 1; C = 0;
        #10;
        
        // Test case 4
        A = 0; B = 0; C = 1;
        #10;
        
        // Test case 5
        A = 1; B = 0; C = 1;
        #10;
        
        // Test case 6
        A = 0; B = 1; C = 1;
        #10;
        
        // Test case 7
        A = 1; B = 1; C = 1;
        #10;
        
        // End simulation
        $finish;
    end

   
    always @(posedge A or posedge B or posedge C) begin
        $display("Inputs: A=%b, B=%b, C=%b", A, B, C);
      $display(" AND_out=%b,OR_out=%b, XOR_out=%b,NOT_out=%b,NOR_out=%b,NAND_out=%b", AND_out, OR_out,XOR_out, NOT_out,NOR_out,NAND_out);
        $display("Sum_out=%b, Carry_out=%b, MUX_out=%b", Sum_out, Carry_out, MUX_out);
        $display("---------------------------");
    end

endmodule
